# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = lib
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libassembly_a_AR = $(AR) $(ARFLAGS)
libassembly_a_LIBADD =
am_libassembly_a_OBJECTS = BlatRecord.$(OBJEXT) Kmer.$(OBJEXT) \
	Log.$(OBJEXT) KmerVector.$(OBJEXT) BitOperation.$(OBJEXT) \
	SequenceWriter.$(OBJEXT) Utils.$(OBJEXT) Sequence.$(OBJEXT) \
	OptionSet.$(OBJEXT) Read.$(OBJEXT) Contig.$(OBJEXT) \
	globals.$(OBJEXT) SequenceReader.$(OBJEXT) \
	AssemblyUtility.$(OBJEXT) HashGraph.$(OBJEXT) \
	ContigGraph.$(OBJEXT) ContigBranchGroup.$(OBJEXT) \
	ScaffoldGraph.$(OBJEXT) Path.$(OBJEXT) KmerNode.$(OBJEXT) \
	BranchGroup.$(OBJEXT) AbstractNode.$(OBJEXT) \
	NodeImpl.$(OBJEXT) ComponentGraph.$(OBJEXT) \
	Component.$(OBJEXT) HashAlign.$(OBJEXT) HashNode.$(OBJEXT) \
	ConnectionGraph.$(OBJEXT) ContigPath.$(OBJEXT) \
	RNAGraph.$(OBJEXT) ComponentNode.$(OBJEXT) HashTable.$(OBJEXT) \
	ContigNode.$(OBJEXT)
libassembly_a_OBJECTS = $(am_libassembly_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libassembly_a_SOURCES)
DIST_SOURCES = $(libassembly_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_LDFLAGS = -fopenmp
AM_CXXFLAGS = -Wall -O2 -fopenmp
INCLUDES = -I$(top_srcdir)/include/common -I$(top_srcdir)/include/assembly 
libassembly_a_SOURCES = \
	$(top_srcdir)/include/common/globals.h \
	$(top_srcdir)/include/common/SequenceReader.h \
	$(top_srcdir)/include/common/Kmer.h \
	$(top_srcdir)/include/common/BitOperation.h \
	$(top_srcdir)/include/common/Contig.h \
	$(top_srcdir)/include/common/Log.h \
	$(top_srcdir)/include/common/Utils.h \
	$(top_srcdir)/include/common/SequenceWriter.h \
	$(top_srcdir)/include/common/Sequence.h \
	$(top_srcdir)/include/common/Read.h \
	$(top_srcdir)/include/common/KmerVector.h \
	$(top_srcdir)/include/common/BlatRecord.h \
	$(top_srcdir)/include/common/OptionSet.h \
	$(top_srcdir)/src/common/BlatRecord.cpp \
	$(top_srcdir)/src/common/Kmer.cpp \
	$(top_srcdir)/src/common/Log.cpp \
	$(top_srcdir)/src/common/KmerVector.cpp \
	$(top_srcdir)/src/common/BitOperation.cpp \
	$(top_srcdir)/src/common/SequenceWriter.cpp \
	$(top_srcdir)/src/common/Utils.cpp \
	$(top_srcdir)/src/common/Sequence.cpp \
	$(top_srcdir)/src/common/OptionSet.cpp \
	$(top_srcdir)/src/common/Read.cpp \
	$(top_srcdir)/src/common/Contig.cpp \
	$(top_srcdir)/src/common/globals.cpp \
	$(top_srcdir)/src/common/SequenceReader.cpp \
	$(top_srcdir)/include/assembly/AssemblyUtility.h \
	$(top_srcdir)/include/assembly/Component.h \
	$(top_srcdir)/include/assembly/HashAlign.h \
	$(top_srcdir)/include/assembly/ContigGraph.h \
	$(top_srcdir)/include/assembly/HashNode.h \
	$(top_srcdir)/include/assembly/ComponentNode.h \
	$(top_srcdir)/include/assembly/KmerNode.h \
	$(top_srcdir)/include/assembly/ContigNode.h \
	$(top_srcdir)/include/assembly/ContigPath.h \
	$(top_srcdir)/include/assembly/ContigBranchGroup.h \
	$(top_srcdir)/include/assembly/ConnectionGraph.h \
	$(top_srcdir)/include/assembly/HashGraph.h \
	$(top_srcdir)/include/assembly/Path.h \
	$(top_srcdir)/include/assembly/ComponentGraph.h \
	$(top_srcdir)/include/assembly/BranchGroup.h \
	$(top_srcdir)/include/assembly/RNAGraph.h \
	$(top_srcdir)/include/assembly/ScaffoldGraph.h \
	$(top_srcdir)/include/assembly/HashTable.h \
	$(top_srcdir)/include/assembly/AbstractNode.h \
	$(top_srcdir)/include/assembly/NodeImpl.h \
	$(top_srcdir)/src/assembly/AssemblyUtility.cpp \
	$(top_srcdir)/src/assembly/HashGraph.cpp \
	$(top_srcdir)/src/assembly/ContigGraph.cpp \
	$(top_srcdir)/src/assembly/ContigBranchGroup.cpp \
	$(top_srcdir)/src/assembly/ScaffoldGraph.cpp \
	$(top_srcdir)/src/assembly/Path.cpp \
	$(top_srcdir)/src/assembly/KmerNode.cpp \
	$(top_srcdir)/src/assembly/BranchGroup.cpp \
	$(top_srcdir)/src/assembly/AbstractNode.cpp \
	$(top_srcdir)/src/assembly/NodeImpl.cpp \
	$(top_srcdir)/src/assembly/ComponentGraph.cpp \
	$(top_srcdir)/src/assembly/Component.cpp \
	$(top_srcdir)/src/assembly/HashAlign.cpp \
	$(top_srcdir)/src/assembly/HashNode.cpp \
	$(top_srcdir)/src/assembly/ConnectionGraph.cpp \
	$(top_srcdir)/src/assembly/ContigPath.cpp \
	$(top_srcdir)/src/assembly/RNAGraph.cpp \
	$(top_srcdir)/src/assembly/ComponentNode.cpp \
	$(top_srcdir)/src/assembly/HashTable.cpp \
	$(top_srcdir)/src/assembly/ContigNode.cpp 

noinst_LIBRARIES = \
	libassembly.a 

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  lib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libassembly.a: $(libassembly_a_OBJECTS) $(libassembly_a_DEPENDENCIES) 
	-rm -f libassembly.a
	$(libassembly_a_AR) libassembly.a $(libassembly_a_OBJECTS) $(libassembly_a_LIBADD)
	$(RANLIB) libassembly.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbstractNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AssemblyUtility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitOperation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BlatRecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BranchGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Component.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComponentGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComponentNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConnectionGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Contig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ContigBranchGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ContigGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ContigNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ContigPath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HashAlign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HashGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HashNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HashTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Kmer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KmerNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KmerVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NodeImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptionSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScaffoldGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/globals.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

BlatRecord.o: $(top_srcdir)/src/common/BlatRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BlatRecord.o -MD -MP -MF $(DEPDIR)/BlatRecord.Tpo -c -o BlatRecord.o `test -f '$(top_srcdir)/src/common/BlatRecord.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/BlatRecord.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BlatRecord.Tpo $(DEPDIR)/BlatRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/BlatRecord.cpp' object='BlatRecord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BlatRecord.o `test -f '$(top_srcdir)/src/common/BlatRecord.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/BlatRecord.cpp

BlatRecord.obj: $(top_srcdir)/src/common/BlatRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BlatRecord.obj -MD -MP -MF $(DEPDIR)/BlatRecord.Tpo -c -o BlatRecord.obj `if test -f '$(top_srcdir)/src/common/BlatRecord.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/BlatRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/BlatRecord.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BlatRecord.Tpo $(DEPDIR)/BlatRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/BlatRecord.cpp' object='BlatRecord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BlatRecord.obj `if test -f '$(top_srcdir)/src/common/BlatRecord.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/BlatRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/BlatRecord.cpp'; fi`

Kmer.o: $(top_srcdir)/src/common/Kmer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Kmer.o -MD -MP -MF $(DEPDIR)/Kmer.Tpo -c -o Kmer.o `test -f '$(top_srcdir)/src/common/Kmer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Kmer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Kmer.Tpo $(DEPDIR)/Kmer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Kmer.cpp' object='Kmer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Kmer.o `test -f '$(top_srcdir)/src/common/Kmer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Kmer.cpp

Kmer.obj: $(top_srcdir)/src/common/Kmer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Kmer.obj -MD -MP -MF $(DEPDIR)/Kmer.Tpo -c -o Kmer.obj `if test -f '$(top_srcdir)/src/common/Kmer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Kmer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Kmer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Kmer.Tpo $(DEPDIR)/Kmer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Kmer.cpp' object='Kmer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Kmer.obj `if test -f '$(top_srcdir)/src/common/Kmer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Kmer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Kmer.cpp'; fi`

Log.o: $(top_srcdir)/src/common/Log.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.o -MD -MP -MF $(DEPDIR)/Log.Tpo -c -o Log.o `test -f '$(top_srcdir)/src/common/Log.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Log.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Log.Tpo $(DEPDIR)/Log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Log.cpp' object='Log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.o `test -f '$(top_srcdir)/src/common/Log.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Log.cpp

Log.obj: $(top_srcdir)/src/common/Log.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.obj -MD -MP -MF $(DEPDIR)/Log.Tpo -c -o Log.obj `if test -f '$(top_srcdir)/src/common/Log.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Log.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Log.Tpo $(DEPDIR)/Log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Log.cpp' object='Log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.obj `if test -f '$(top_srcdir)/src/common/Log.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Log.cpp'; fi`

KmerVector.o: $(top_srcdir)/src/common/KmerVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KmerVector.o -MD -MP -MF $(DEPDIR)/KmerVector.Tpo -c -o KmerVector.o `test -f '$(top_srcdir)/src/common/KmerVector.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/KmerVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/KmerVector.Tpo $(DEPDIR)/KmerVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/KmerVector.cpp' object='KmerVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KmerVector.o `test -f '$(top_srcdir)/src/common/KmerVector.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/KmerVector.cpp

KmerVector.obj: $(top_srcdir)/src/common/KmerVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KmerVector.obj -MD -MP -MF $(DEPDIR)/KmerVector.Tpo -c -o KmerVector.obj `if test -f '$(top_srcdir)/src/common/KmerVector.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/KmerVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/KmerVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/KmerVector.Tpo $(DEPDIR)/KmerVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/KmerVector.cpp' object='KmerVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KmerVector.obj `if test -f '$(top_srcdir)/src/common/KmerVector.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/KmerVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/KmerVector.cpp'; fi`

BitOperation.o: $(top_srcdir)/src/common/BitOperation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BitOperation.o -MD -MP -MF $(DEPDIR)/BitOperation.Tpo -c -o BitOperation.o `test -f '$(top_srcdir)/src/common/BitOperation.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/BitOperation.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BitOperation.Tpo $(DEPDIR)/BitOperation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/BitOperation.cpp' object='BitOperation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BitOperation.o `test -f '$(top_srcdir)/src/common/BitOperation.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/BitOperation.cpp

BitOperation.obj: $(top_srcdir)/src/common/BitOperation.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BitOperation.obj -MD -MP -MF $(DEPDIR)/BitOperation.Tpo -c -o BitOperation.obj `if test -f '$(top_srcdir)/src/common/BitOperation.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/BitOperation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/BitOperation.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BitOperation.Tpo $(DEPDIR)/BitOperation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/BitOperation.cpp' object='BitOperation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BitOperation.obj `if test -f '$(top_srcdir)/src/common/BitOperation.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/BitOperation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/BitOperation.cpp'; fi`

SequenceWriter.o: $(top_srcdir)/src/common/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceWriter.o -MD -MP -MF $(DEPDIR)/SequenceWriter.Tpo -c -o SequenceWriter.o `test -f '$(top_srcdir)/src/common/SequenceWriter.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SequenceWriter.Tpo $(DEPDIR)/SequenceWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/SequenceWriter.cpp' object='SequenceWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceWriter.o `test -f '$(top_srcdir)/src/common/SequenceWriter.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/SequenceWriter.cpp

SequenceWriter.obj: $(top_srcdir)/src/common/SequenceWriter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceWriter.obj -MD -MP -MF $(DEPDIR)/SequenceWriter.Tpo -c -o SequenceWriter.obj `if test -f '$(top_srcdir)/src/common/SequenceWriter.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/SequenceWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/SequenceWriter.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SequenceWriter.Tpo $(DEPDIR)/SequenceWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/SequenceWriter.cpp' object='SequenceWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceWriter.obj `if test -f '$(top_srcdir)/src/common/SequenceWriter.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/SequenceWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/SequenceWriter.cpp'; fi`

Utils.o: $(top_srcdir)/src/common/Utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utils.o -MD -MP -MF $(DEPDIR)/Utils.Tpo -c -o Utils.o `test -f '$(top_srcdir)/src/common/Utils.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Utils.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Utils.Tpo $(DEPDIR)/Utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Utils.cpp' object='Utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utils.o `test -f '$(top_srcdir)/src/common/Utils.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Utils.cpp

Utils.obj: $(top_srcdir)/src/common/Utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utils.obj -MD -MP -MF $(DEPDIR)/Utils.Tpo -c -o Utils.obj `if test -f '$(top_srcdir)/src/common/Utils.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Utils.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Utils.Tpo $(DEPDIR)/Utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Utils.cpp' object='Utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utils.obj `if test -f '$(top_srcdir)/src/common/Utils.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Utils.cpp'; fi`

Sequence.o: $(top_srcdir)/src/common/Sequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Sequence.o -MD -MP -MF $(DEPDIR)/Sequence.Tpo -c -o Sequence.o `test -f '$(top_srcdir)/src/common/Sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Sequence.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Sequence.Tpo $(DEPDIR)/Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Sequence.cpp' object='Sequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sequence.o `test -f '$(top_srcdir)/src/common/Sequence.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Sequence.cpp

Sequence.obj: $(top_srcdir)/src/common/Sequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Sequence.obj -MD -MP -MF $(DEPDIR)/Sequence.Tpo -c -o Sequence.obj `if test -f '$(top_srcdir)/src/common/Sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Sequence.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Sequence.Tpo $(DEPDIR)/Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Sequence.cpp' object='Sequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sequence.obj `if test -f '$(top_srcdir)/src/common/Sequence.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Sequence.cpp'; fi`

OptionSet.o: $(top_srcdir)/src/common/OptionSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptionSet.o -MD -MP -MF $(DEPDIR)/OptionSet.Tpo -c -o OptionSet.o `test -f '$(top_srcdir)/src/common/OptionSet.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/OptionSet.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/OptionSet.Tpo $(DEPDIR)/OptionSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/OptionSet.cpp' object='OptionSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptionSet.o `test -f '$(top_srcdir)/src/common/OptionSet.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/OptionSet.cpp

OptionSet.obj: $(top_srcdir)/src/common/OptionSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptionSet.obj -MD -MP -MF $(DEPDIR)/OptionSet.Tpo -c -o OptionSet.obj `if test -f '$(top_srcdir)/src/common/OptionSet.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/OptionSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/OptionSet.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/OptionSet.Tpo $(DEPDIR)/OptionSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/OptionSet.cpp' object='OptionSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptionSet.obj `if test -f '$(top_srcdir)/src/common/OptionSet.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/OptionSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/OptionSet.cpp'; fi`

Read.o: $(top_srcdir)/src/common/Read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Read.o -MD -MP -MF $(DEPDIR)/Read.Tpo -c -o Read.o `test -f '$(top_srcdir)/src/common/Read.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Read.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Read.Tpo $(DEPDIR)/Read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Read.cpp' object='Read.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Read.o `test -f '$(top_srcdir)/src/common/Read.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Read.cpp

Read.obj: $(top_srcdir)/src/common/Read.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Read.obj -MD -MP -MF $(DEPDIR)/Read.Tpo -c -o Read.obj `if test -f '$(top_srcdir)/src/common/Read.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Read.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Read.Tpo $(DEPDIR)/Read.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Read.cpp' object='Read.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Read.obj `if test -f '$(top_srcdir)/src/common/Read.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Read.cpp'; fi`

Contig.o: $(top_srcdir)/src/common/Contig.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Contig.o -MD -MP -MF $(DEPDIR)/Contig.Tpo -c -o Contig.o `test -f '$(top_srcdir)/src/common/Contig.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Contig.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Contig.Tpo $(DEPDIR)/Contig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Contig.cpp' object='Contig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Contig.o `test -f '$(top_srcdir)/src/common/Contig.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/Contig.cpp

Contig.obj: $(top_srcdir)/src/common/Contig.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Contig.obj -MD -MP -MF $(DEPDIR)/Contig.Tpo -c -o Contig.obj `if test -f '$(top_srcdir)/src/common/Contig.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Contig.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Contig.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Contig.Tpo $(DEPDIR)/Contig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/Contig.cpp' object='Contig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Contig.obj `if test -f '$(top_srcdir)/src/common/Contig.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/Contig.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/Contig.cpp'; fi`

globals.o: $(top_srcdir)/src/common/globals.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT globals.o -MD -MP -MF $(DEPDIR)/globals.Tpo -c -o globals.o `test -f '$(top_srcdir)/src/common/globals.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/globals.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/globals.Tpo $(DEPDIR)/globals.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/globals.cpp' object='globals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o globals.o `test -f '$(top_srcdir)/src/common/globals.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/globals.cpp

globals.obj: $(top_srcdir)/src/common/globals.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT globals.obj -MD -MP -MF $(DEPDIR)/globals.Tpo -c -o globals.obj `if test -f '$(top_srcdir)/src/common/globals.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/globals.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/globals.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/globals.Tpo $(DEPDIR)/globals.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/globals.cpp' object='globals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o globals.obj `if test -f '$(top_srcdir)/src/common/globals.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/globals.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/globals.cpp'; fi`

SequenceReader.o: $(top_srcdir)/src/common/SequenceReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceReader.o -MD -MP -MF $(DEPDIR)/SequenceReader.Tpo -c -o SequenceReader.o `test -f '$(top_srcdir)/src/common/SequenceReader.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/SequenceReader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SequenceReader.Tpo $(DEPDIR)/SequenceReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/SequenceReader.cpp' object='SequenceReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceReader.o `test -f '$(top_srcdir)/src/common/SequenceReader.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/common/SequenceReader.cpp

SequenceReader.obj: $(top_srcdir)/src/common/SequenceReader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SequenceReader.obj -MD -MP -MF $(DEPDIR)/SequenceReader.Tpo -c -o SequenceReader.obj `if test -f '$(top_srcdir)/src/common/SequenceReader.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/SequenceReader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/SequenceReader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SequenceReader.Tpo $(DEPDIR)/SequenceReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/common/SequenceReader.cpp' object='SequenceReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SequenceReader.obj `if test -f '$(top_srcdir)/src/common/SequenceReader.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/common/SequenceReader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/common/SequenceReader.cpp'; fi`

AssemblyUtility.o: $(top_srcdir)/src/assembly/AssemblyUtility.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AssemblyUtility.o -MD -MP -MF $(DEPDIR)/AssemblyUtility.Tpo -c -o AssemblyUtility.o `test -f '$(top_srcdir)/src/assembly/AssemblyUtility.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/AssemblyUtility.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/AssemblyUtility.Tpo $(DEPDIR)/AssemblyUtility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/AssemblyUtility.cpp' object='AssemblyUtility.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AssemblyUtility.o `test -f '$(top_srcdir)/src/assembly/AssemblyUtility.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/AssemblyUtility.cpp

AssemblyUtility.obj: $(top_srcdir)/src/assembly/AssemblyUtility.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AssemblyUtility.obj -MD -MP -MF $(DEPDIR)/AssemblyUtility.Tpo -c -o AssemblyUtility.obj `if test -f '$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/AssemblyUtility.Tpo $(DEPDIR)/AssemblyUtility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/AssemblyUtility.cpp' object='AssemblyUtility.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AssemblyUtility.obj `if test -f '$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/AssemblyUtility.cpp'; fi`

HashGraph.o: $(top_srcdir)/src/assembly/HashGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashGraph.o -MD -MP -MF $(DEPDIR)/HashGraph.Tpo -c -o HashGraph.o `test -f '$(top_srcdir)/src/assembly/HashGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashGraph.Tpo $(DEPDIR)/HashGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashGraph.cpp' object='HashGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashGraph.o `test -f '$(top_srcdir)/src/assembly/HashGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashGraph.cpp

HashGraph.obj: $(top_srcdir)/src/assembly/HashGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashGraph.obj -MD -MP -MF $(DEPDIR)/HashGraph.Tpo -c -o HashGraph.obj `if test -f '$(top_srcdir)/src/assembly/HashGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashGraph.Tpo $(DEPDIR)/HashGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashGraph.cpp' object='HashGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashGraph.obj `if test -f '$(top_srcdir)/src/assembly/HashGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashGraph.cpp'; fi`

ContigGraph.o: $(top_srcdir)/src/assembly/ContigGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigGraph.o -MD -MP -MF $(DEPDIR)/ContigGraph.Tpo -c -o ContigGraph.o `test -f '$(top_srcdir)/src/assembly/ContigGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigGraph.Tpo $(DEPDIR)/ContigGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigGraph.cpp' object='ContigGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigGraph.o `test -f '$(top_srcdir)/src/assembly/ContigGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigGraph.cpp

ContigGraph.obj: $(top_srcdir)/src/assembly/ContigGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigGraph.obj -MD -MP -MF $(DEPDIR)/ContigGraph.Tpo -c -o ContigGraph.obj `if test -f '$(top_srcdir)/src/assembly/ContigGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigGraph.Tpo $(DEPDIR)/ContigGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigGraph.cpp' object='ContigGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigGraph.obj `if test -f '$(top_srcdir)/src/assembly/ContigGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigGraph.cpp'; fi`

ContigBranchGroup.o: $(top_srcdir)/src/assembly/ContigBranchGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigBranchGroup.o -MD -MP -MF $(DEPDIR)/ContigBranchGroup.Tpo -c -o ContigBranchGroup.o `test -f '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigBranchGroup.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigBranchGroup.Tpo $(DEPDIR)/ContigBranchGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigBranchGroup.cpp' object='ContigBranchGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigBranchGroup.o `test -f '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigBranchGroup.cpp

ContigBranchGroup.obj: $(top_srcdir)/src/assembly/ContigBranchGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigBranchGroup.obj -MD -MP -MF $(DEPDIR)/ContigBranchGroup.Tpo -c -o ContigBranchGroup.obj `if test -f '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigBranchGroup.Tpo $(DEPDIR)/ContigBranchGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigBranchGroup.cpp' object='ContigBranchGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigBranchGroup.obj `if test -f '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigBranchGroup.cpp'; fi`

ScaffoldGraph.o: $(top_srcdir)/src/assembly/ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScaffoldGraph.o -MD -MP -MF $(DEPDIR)/ScaffoldGraph.Tpo -c -o ScaffoldGraph.o `test -f '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ScaffoldGraph.Tpo $(DEPDIR)/ScaffoldGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ScaffoldGraph.cpp' object='ScaffoldGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScaffoldGraph.o `test -f '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ScaffoldGraph.cpp

ScaffoldGraph.obj: $(top_srcdir)/src/assembly/ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScaffoldGraph.obj -MD -MP -MF $(DEPDIR)/ScaffoldGraph.Tpo -c -o ScaffoldGraph.obj `if test -f '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ScaffoldGraph.Tpo $(DEPDIR)/ScaffoldGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ScaffoldGraph.cpp' object='ScaffoldGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScaffoldGraph.obj `if test -f '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ScaffoldGraph.cpp'; fi`

Path.o: $(top_srcdir)/src/assembly/Path.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Path.o -MD -MP -MF $(DEPDIR)/Path.Tpo -c -o Path.o `test -f '$(top_srcdir)/src/assembly/Path.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/Path.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Path.Tpo $(DEPDIR)/Path.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/Path.cpp' object='Path.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Path.o `test -f '$(top_srcdir)/src/assembly/Path.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/Path.cpp

Path.obj: $(top_srcdir)/src/assembly/Path.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Path.obj -MD -MP -MF $(DEPDIR)/Path.Tpo -c -o Path.obj `if test -f '$(top_srcdir)/src/assembly/Path.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/Path.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/Path.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Path.Tpo $(DEPDIR)/Path.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/Path.cpp' object='Path.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Path.obj `if test -f '$(top_srcdir)/src/assembly/Path.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/Path.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/Path.cpp'; fi`

KmerNode.o: $(top_srcdir)/src/assembly/KmerNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KmerNode.o -MD -MP -MF $(DEPDIR)/KmerNode.Tpo -c -o KmerNode.o `test -f '$(top_srcdir)/src/assembly/KmerNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/KmerNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/KmerNode.Tpo $(DEPDIR)/KmerNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/KmerNode.cpp' object='KmerNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KmerNode.o `test -f '$(top_srcdir)/src/assembly/KmerNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/KmerNode.cpp

KmerNode.obj: $(top_srcdir)/src/assembly/KmerNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KmerNode.obj -MD -MP -MF $(DEPDIR)/KmerNode.Tpo -c -o KmerNode.obj `if test -f '$(top_srcdir)/src/assembly/KmerNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/KmerNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/KmerNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/KmerNode.Tpo $(DEPDIR)/KmerNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/KmerNode.cpp' object='KmerNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KmerNode.obj `if test -f '$(top_srcdir)/src/assembly/KmerNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/KmerNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/KmerNode.cpp'; fi`

BranchGroup.o: $(top_srcdir)/src/assembly/BranchGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BranchGroup.o -MD -MP -MF $(DEPDIR)/BranchGroup.Tpo -c -o BranchGroup.o `test -f '$(top_srcdir)/src/assembly/BranchGroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/BranchGroup.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BranchGroup.Tpo $(DEPDIR)/BranchGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/BranchGroup.cpp' object='BranchGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BranchGroup.o `test -f '$(top_srcdir)/src/assembly/BranchGroup.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/BranchGroup.cpp

BranchGroup.obj: $(top_srcdir)/src/assembly/BranchGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BranchGroup.obj -MD -MP -MF $(DEPDIR)/BranchGroup.Tpo -c -o BranchGroup.obj `if test -f '$(top_srcdir)/src/assembly/BranchGroup.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/BranchGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/BranchGroup.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/BranchGroup.Tpo $(DEPDIR)/BranchGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/BranchGroup.cpp' object='BranchGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BranchGroup.obj `if test -f '$(top_srcdir)/src/assembly/BranchGroup.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/BranchGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/BranchGroup.cpp'; fi`

AbstractNode.o: $(top_srcdir)/src/assembly/AbstractNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AbstractNode.o -MD -MP -MF $(DEPDIR)/AbstractNode.Tpo -c -o AbstractNode.o `test -f '$(top_srcdir)/src/assembly/AbstractNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/AbstractNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/AbstractNode.Tpo $(DEPDIR)/AbstractNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/AbstractNode.cpp' object='AbstractNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AbstractNode.o `test -f '$(top_srcdir)/src/assembly/AbstractNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/AbstractNode.cpp

AbstractNode.obj: $(top_srcdir)/src/assembly/AbstractNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AbstractNode.obj -MD -MP -MF $(DEPDIR)/AbstractNode.Tpo -c -o AbstractNode.obj `if test -f '$(top_srcdir)/src/assembly/AbstractNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/AbstractNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/AbstractNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/AbstractNode.Tpo $(DEPDIR)/AbstractNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/AbstractNode.cpp' object='AbstractNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AbstractNode.obj `if test -f '$(top_srcdir)/src/assembly/AbstractNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/AbstractNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/AbstractNode.cpp'; fi`

NodeImpl.o: $(top_srcdir)/src/assembly/NodeImpl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NodeImpl.o -MD -MP -MF $(DEPDIR)/NodeImpl.Tpo -c -o NodeImpl.o `test -f '$(top_srcdir)/src/assembly/NodeImpl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/NodeImpl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/NodeImpl.Tpo $(DEPDIR)/NodeImpl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/NodeImpl.cpp' object='NodeImpl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NodeImpl.o `test -f '$(top_srcdir)/src/assembly/NodeImpl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/NodeImpl.cpp

NodeImpl.obj: $(top_srcdir)/src/assembly/NodeImpl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NodeImpl.obj -MD -MP -MF $(DEPDIR)/NodeImpl.Tpo -c -o NodeImpl.obj `if test -f '$(top_srcdir)/src/assembly/NodeImpl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/NodeImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/NodeImpl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/NodeImpl.Tpo $(DEPDIR)/NodeImpl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/NodeImpl.cpp' object='NodeImpl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NodeImpl.obj `if test -f '$(top_srcdir)/src/assembly/NodeImpl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/NodeImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/NodeImpl.cpp'; fi`

ComponentGraph.o: $(top_srcdir)/src/assembly/ComponentGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ComponentGraph.o -MD -MP -MF $(DEPDIR)/ComponentGraph.Tpo -c -o ComponentGraph.o `test -f '$(top_srcdir)/src/assembly/ComponentGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ComponentGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ComponentGraph.Tpo $(DEPDIR)/ComponentGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ComponentGraph.cpp' object='ComponentGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ComponentGraph.o `test -f '$(top_srcdir)/src/assembly/ComponentGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ComponentGraph.cpp

ComponentGraph.obj: $(top_srcdir)/src/assembly/ComponentGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ComponentGraph.obj -MD -MP -MF $(DEPDIR)/ComponentGraph.Tpo -c -o ComponentGraph.obj `if test -f '$(top_srcdir)/src/assembly/ComponentGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ComponentGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ComponentGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ComponentGraph.Tpo $(DEPDIR)/ComponentGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ComponentGraph.cpp' object='ComponentGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ComponentGraph.obj `if test -f '$(top_srcdir)/src/assembly/ComponentGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ComponentGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ComponentGraph.cpp'; fi`

Component.o: $(top_srcdir)/src/assembly/Component.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Component.o -MD -MP -MF $(DEPDIR)/Component.Tpo -c -o Component.o `test -f '$(top_srcdir)/src/assembly/Component.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/Component.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Component.Tpo $(DEPDIR)/Component.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/Component.cpp' object='Component.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Component.o `test -f '$(top_srcdir)/src/assembly/Component.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/Component.cpp

Component.obj: $(top_srcdir)/src/assembly/Component.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Component.obj -MD -MP -MF $(DEPDIR)/Component.Tpo -c -o Component.obj `if test -f '$(top_srcdir)/src/assembly/Component.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/Component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/Component.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Component.Tpo $(DEPDIR)/Component.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/Component.cpp' object='Component.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Component.obj `if test -f '$(top_srcdir)/src/assembly/Component.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/Component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/Component.cpp'; fi`

HashAlign.o: $(top_srcdir)/src/assembly/HashAlign.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashAlign.o -MD -MP -MF $(DEPDIR)/HashAlign.Tpo -c -o HashAlign.o `test -f '$(top_srcdir)/src/assembly/HashAlign.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashAlign.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashAlign.Tpo $(DEPDIR)/HashAlign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashAlign.cpp' object='HashAlign.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashAlign.o `test -f '$(top_srcdir)/src/assembly/HashAlign.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashAlign.cpp

HashAlign.obj: $(top_srcdir)/src/assembly/HashAlign.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashAlign.obj -MD -MP -MF $(DEPDIR)/HashAlign.Tpo -c -o HashAlign.obj `if test -f '$(top_srcdir)/src/assembly/HashAlign.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashAlign.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashAlign.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashAlign.Tpo $(DEPDIR)/HashAlign.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashAlign.cpp' object='HashAlign.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashAlign.obj `if test -f '$(top_srcdir)/src/assembly/HashAlign.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashAlign.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashAlign.cpp'; fi`

HashNode.o: $(top_srcdir)/src/assembly/HashNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashNode.o -MD -MP -MF $(DEPDIR)/HashNode.Tpo -c -o HashNode.o `test -f '$(top_srcdir)/src/assembly/HashNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashNode.Tpo $(DEPDIR)/HashNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashNode.cpp' object='HashNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashNode.o `test -f '$(top_srcdir)/src/assembly/HashNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashNode.cpp

HashNode.obj: $(top_srcdir)/src/assembly/HashNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashNode.obj -MD -MP -MF $(DEPDIR)/HashNode.Tpo -c -o HashNode.obj `if test -f '$(top_srcdir)/src/assembly/HashNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashNode.Tpo $(DEPDIR)/HashNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashNode.cpp' object='HashNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashNode.obj `if test -f '$(top_srcdir)/src/assembly/HashNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashNode.cpp'; fi`

ConnectionGraph.o: $(top_srcdir)/src/assembly/ConnectionGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConnectionGraph.o -MD -MP -MF $(DEPDIR)/ConnectionGraph.Tpo -c -o ConnectionGraph.o `test -f '$(top_srcdir)/src/assembly/ConnectionGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ConnectionGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ConnectionGraph.Tpo $(DEPDIR)/ConnectionGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ConnectionGraph.cpp' object='ConnectionGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConnectionGraph.o `test -f '$(top_srcdir)/src/assembly/ConnectionGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ConnectionGraph.cpp

ConnectionGraph.obj: $(top_srcdir)/src/assembly/ConnectionGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConnectionGraph.obj -MD -MP -MF $(DEPDIR)/ConnectionGraph.Tpo -c -o ConnectionGraph.obj `if test -f '$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ConnectionGraph.Tpo $(DEPDIR)/ConnectionGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ConnectionGraph.cpp' object='ConnectionGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConnectionGraph.obj `if test -f '$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ConnectionGraph.cpp'; fi`

ContigPath.o: $(top_srcdir)/src/assembly/ContigPath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigPath.o -MD -MP -MF $(DEPDIR)/ContigPath.Tpo -c -o ContigPath.o `test -f '$(top_srcdir)/src/assembly/ContigPath.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigPath.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigPath.Tpo $(DEPDIR)/ContigPath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigPath.cpp' object='ContigPath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigPath.o `test -f '$(top_srcdir)/src/assembly/ContigPath.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigPath.cpp

ContigPath.obj: $(top_srcdir)/src/assembly/ContigPath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigPath.obj -MD -MP -MF $(DEPDIR)/ContigPath.Tpo -c -o ContigPath.obj `if test -f '$(top_srcdir)/src/assembly/ContigPath.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigPath.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigPath.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigPath.Tpo $(DEPDIR)/ContigPath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigPath.cpp' object='ContigPath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigPath.obj `if test -f '$(top_srcdir)/src/assembly/ContigPath.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigPath.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigPath.cpp'; fi`

RNAGraph.o: $(top_srcdir)/src/assembly/RNAGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAGraph.o -MD -MP -MF $(DEPDIR)/RNAGraph.Tpo -c -o RNAGraph.o `test -f '$(top_srcdir)/src/assembly/RNAGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/RNAGraph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/RNAGraph.Tpo $(DEPDIR)/RNAGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/RNAGraph.cpp' object='RNAGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAGraph.o `test -f '$(top_srcdir)/src/assembly/RNAGraph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/RNAGraph.cpp

RNAGraph.obj: $(top_srcdir)/src/assembly/RNAGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAGraph.obj -MD -MP -MF $(DEPDIR)/RNAGraph.Tpo -c -o RNAGraph.obj `if test -f '$(top_srcdir)/src/assembly/RNAGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/RNAGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/RNAGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/RNAGraph.Tpo $(DEPDIR)/RNAGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/RNAGraph.cpp' object='RNAGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAGraph.obj `if test -f '$(top_srcdir)/src/assembly/RNAGraph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/RNAGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/RNAGraph.cpp'; fi`

ComponentNode.o: $(top_srcdir)/src/assembly/ComponentNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ComponentNode.o -MD -MP -MF $(DEPDIR)/ComponentNode.Tpo -c -o ComponentNode.o `test -f '$(top_srcdir)/src/assembly/ComponentNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ComponentNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ComponentNode.Tpo $(DEPDIR)/ComponentNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ComponentNode.cpp' object='ComponentNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ComponentNode.o `test -f '$(top_srcdir)/src/assembly/ComponentNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ComponentNode.cpp

ComponentNode.obj: $(top_srcdir)/src/assembly/ComponentNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ComponentNode.obj -MD -MP -MF $(DEPDIR)/ComponentNode.Tpo -c -o ComponentNode.obj `if test -f '$(top_srcdir)/src/assembly/ComponentNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ComponentNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ComponentNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ComponentNode.Tpo $(DEPDIR)/ComponentNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ComponentNode.cpp' object='ComponentNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ComponentNode.obj `if test -f '$(top_srcdir)/src/assembly/ComponentNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ComponentNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ComponentNode.cpp'; fi`

HashTable.o: $(top_srcdir)/src/assembly/HashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashTable.o -MD -MP -MF $(DEPDIR)/HashTable.Tpo -c -o HashTable.o `test -f '$(top_srcdir)/src/assembly/HashTable.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashTable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashTable.Tpo $(DEPDIR)/HashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashTable.cpp' object='HashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashTable.o `test -f '$(top_srcdir)/src/assembly/HashTable.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/HashTable.cpp

HashTable.obj: $(top_srcdir)/src/assembly/HashTable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HashTable.obj -MD -MP -MF $(DEPDIR)/HashTable.Tpo -c -o HashTable.obj `if test -f '$(top_srcdir)/src/assembly/HashTable.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashTable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/HashTable.Tpo $(DEPDIR)/HashTable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/HashTable.cpp' object='HashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HashTable.obj `if test -f '$(top_srcdir)/src/assembly/HashTable.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/HashTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/HashTable.cpp'; fi`

ContigNode.o: $(top_srcdir)/src/assembly/ContigNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigNode.o -MD -MP -MF $(DEPDIR)/ContigNode.Tpo -c -o ContigNode.o `test -f '$(top_srcdir)/src/assembly/ContigNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigNode.Tpo $(DEPDIR)/ContigNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigNode.cpp' object='ContigNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigNode.o `test -f '$(top_srcdir)/src/assembly/ContigNode.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/assembly/ContigNode.cpp

ContigNode.obj: $(top_srcdir)/src/assembly/ContigNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContigNode.obj -MD -MP -MF $(DEPDIR)/ContigNode.Tpo -c -o ContigNode.obj `if test -f '$(top_srcdir)/src/assembly/ContigNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ContigNode.Tpo $(DEPDIR)/ContigNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/assembly/ContigNode.cpp' object='ContigNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContigNode.obj `if test -f '$(top_srcdir)/src/assembly/ContigNode.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/assembly/ContigNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/assembly/ContigNode.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
