# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = idba_hybrid$(EXEEXT)
noinst_PROGRAMS = sort_reads$(EXEEXT) parallel_rna_blat$(EXEEXT) \
	test$(EXEEXT) print_graph$(EXEEXT) validate_rna$(EXEEXT) \
	scaffold$(EXEEXT) shuffle_reads$(EXEEXT) fa2fq$(EXEEXT) \
	validate_contigs_mummer$(EXEEXT) filter_blat$(EXEEXT) \
	sort_psl$(EXEEXT) validate_reads_blat$(EXEEXT) \
	validate_component$(EXEEXT) filter_contigs$(EXEEXT) \
	sample_reads$(EXEEXT) split_fq$(EXEEXT) \
	idba_tran_test$(EXEEXT) split_fa$(EXEEXT) fq2fa$(EXEEXT) \
	raw_n50$(EXEEXT) parallel_blat$(EXEEXT) \
	split_scaffold$(EXEEXT) validate_contigs_blat$(EXEEXT) \
	filterfa$(EXEEXT) sim_reads$(EXEEXT) idba_ud$(EXEEXT) \
	sim_reads_tran$(EXEEXT) idba_tran$(EXEEXT) idba$(EXEEXT)
subdir = bin
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_fa2fq_OBJECTS = fa2fq.$(OBJEXT)
fa2fq_OBJECTS = $(am_fa2fq_OBJECTS)
fa2fq_LDADD = $(LDADD)
am_filter_blat_OBJECTS = filter_blat.$(OBJEXT)
filter_blat_OBJECTS = $(am_filter_blat_OBJECTS)
filter_blat_LDADD = $(LDADD)
am_filter_contigs_OBJECTS = filter_contigs.$(OBJEXT)
filter_contigs_OBJECTS = $(am_filter_contigs_OBJECTS)
filter_contigs_LDADD = $(LDADD)
am_filterfa_OBJECTS = filterfa.$(OBJEXT)
filterfa_OBJECTS = $(am_filterfa_OBJECTS)
filterfa_LDADD = $(LDADD)
am_fq2fa_OBJECTS = fq2fa.$(OBJEXT)
fq2fa_OBJECTS = $(am_fq2fa_OBJECTS)
fq2fa_LDADD = $(LDADD)
am_idba_OBJECTS = idba.$(OBJEXT)
idba_OBJECTS = $(am_idba_OBJECTS)
idba_LDADD = $(LDADD)
am_idba_hybrid_OBJECTS = idba_hybrid.$(OBJEXT)
idba_hybrid_OBJECTS = $(am_idba_hybrid_OBJECTS)
idba_hybrid_LDADD = $(LDADD)
am_idba_tran_OBJECTS = idba_tran.$(OBJEXT)
idba_tran_OBJECTS = $(am_idba_tran_OBJECTS)
idba_tran_LDADD = $(LDADD)
am_idba_tran_test_OBJECTS = idba_tran_test.$(OBJEXT)
idba_tran_test_OBJECTS = $(am_idba_tran_test_OBJECTS)
idba_tran_test_LDADD = $(LDADD)
am_idba_ud_OBJECTS = idba_ud.$(OBJEXT)
idba_ud_OBJECTS = $(am_idba_ud_OBJECTS)
idba_ud_LDADD = $(LDADD)
am_parallel_blat_OBJECTS = parallel_blat.$(OBJEXT)
parallel_blat_OBJECTS = $(am_parallel_blat_OBJECTS)
parallel_blat_LDADD = $(LDADD)
am_parallel_rna_blat_OBJECTS = parallel_rna_blat.$(OBJEXT)
parallel_rna_blat_OBJECTS = $(am_parallel_rna_blat_OBJECTS)
parallel_rna_blat_LDADD = $(LDADD)
am_print_graph_OBJECTS = print_graph.$(OBJEXT)
print_graph_OBJECTS = $(am_print_graph_OBJECTS)
print_graph_LDADD = $(LDADD)
am_raw_n50_OBJECTS = raw_n50.$(OBJEXT)
raw_n50_OBJECTS = $(am_raw_n50_OBJECTS)
raw_n50_LDADD = $(LDADD)
am_sample_reads_OBJECTS = sample_reads.$(OBJEXT)
sample_reads_OBJECTS = $(am_sample_reads_OBJECTS)
sample_reads_LDADD = $(LDADD)
am_scaffold_OBJECTS = scaffold.$(OBJEXT)
scaffold_OBJECTS = $(am_scaffold_OBJECTS)
scaffold_LDADD = $(LDADD)
am_shuffle_reads_OBJECTS = shuffle_reads.$(OBJEXT)
shuffle_reads_OBJECTS = $(am_shuffle_reads_OBJECTS)
shuffle_reads_LDADD = $(LDADD)
am_sim_reads_OBJECTS = sim_reads.$(OBJEXT)
sim_reads_OBJECTS = $(am_sim_reads_OBJECTS)
sim_reads_LDADD = $(LDADD)
am_sim_reads_tran_OBJECTS = sim_reads_tran.$(OBJEXT)
sim_reads_tran_OBJECTS = $(am_sim_reads_tran_OBJECTS)
sim_reads_tran_LDADD = $(LDADD)
am_sort_psl_OBJECTS = sort_psl.$(OBJEXT)
sort_psl_OBJECTS = $(am_sort_psl_OBJECTS)
sort_psl_LDADD = $(LDADD)
am_sort_reads_OBJECTS = sort_reads.$(OBJEXT)
sort_reads_OBJECTS = $(am_sort_reads_OBJECTS)
sort_reads_LDADD = $(LDADD)
am_split_fa_OBJECTS = split_fa.$(OBJEXT)
split_fa_OBJECTS = $(am_split_fa_OBJECTS)
split_fa_LDADD = $(LDADD)
am_split_fq_OBJECTS = split_fq.$(OBJEXT)
split_fq_OBJECTS = $(am_split_fq_OBJECTS)
split_fq_LDADD = $(LDADD)
am_split_scaffold_OBJECTS = split_scaffold.$(OBJEXT)
split_scaffold_OBJECTS = $(am_split_scaffold_OBJECTS)
split_scaffold_LDADD = $(LDADD)
am_test_OBJECTS = test.$(OBJEXT)
test_OBJECTS = $(am_test_OBJECTS)
test_LDADD = $(LDADD)
am_validate_component_OBJECTS = validate_component.$(OBJEXT)
validate_component_OBJECTS = $(am_validate_component_OBJECTS)
validate_component_LDADD = $(LDADD)
am_validate_contigs_blat_OBJECTS = validate_contigs_blat.$(OBJEXT)
validate_contigs_blat_OBJECTS = $(am_validate_contigs_blat_OBJECTS)
validate_contigs_blat_LDADD = $(LDADD)
am_validate_contigs_mummer_OBJECTS =  \
	validate_contigs_mummer.$(OBJEXT)
validate_contigs_mummer_OBJECTS =  \
	$(am_validate_contigs_mummer_OBJECTS)
validate_contigs_mummer_LDADD = $(LDADD)
am_validate_reads_blat_OBJECTS = validate_reads_blat.$(OBJEXT)
validate_reads_blat_OBJECTS = $(am_validate_reads_blat_OBJECTS)
validate_reads_blat_LDADD = $(LDADD)
am_validate_rna_OBJECTS = validate_rna.$(OBJEXT)
validate_rna_OBJECTS = $(am_validate_rna_OBJECTS)
validate_rna_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(fa2fq_SOURCES) $(filter_blat_SOURCES) \
	$(filter_contigs_SOURCES) $(filterfa_SOURCES) $(fq2fa_SOURCES) \
	$(idba_SOURCES) $(idba_hybrid_SOURCES) $(idba_tran_SOURCES) \
	$(idba_tran_test_SOURCES) $(idba_ud_SOURCES) \
	$(parallel_blat_SOURCES) $(parallel_rna_blat_SOURCES) \
	$(print_graph_SOURCES) $(raw_n50_SOURCES) \
	$(sample_reads_SOURCES) $(scaffold_SOURCES) \
	$(shuffle_reads_SOURCES) $(sim_reads_SOURCES) \
	$(sim_reads_tran_SOURCES) $(sort_psl_SOURCES) \
	$(sort_reads_SOURCES) $(split_fa_SOURCES) $(split_fq_SOURCES) \
	$(split_scaffold_SOURCES) $(test_SOURCES) \
	$(validate_component_SOURCES) $(validate_contigs_blat_SOURCES) \
	$(validate_contigs_mummer_SOURCES) \
	$(validate_reads_blat_SOURCES) $(validate_rna_SOURCES)
DIST_SOURCES = $(fa2fq_SOURCES) $(filter_blat_SOURCES) \
	$(filter_contigs_SOURCES) $(filterfa_SOURCES) $(fq2fa_SOURCES) \
	$(idba_SOURCES) $(idba_hybrid_SOURCES) $(idba_tran_SOURCES) \
	$(idba_tran_test_SOURCES) $(idba_ud_SOURCES) \
	$(parallel_blat_SOURCES) $(parallel_rna_blat_SOURCES) \
	$(print_graph_SOURCES) $(raw_n50_SOURCES) \
	$(sample_reads_SOURCES) $(scaffold_SOURCES) \
	$(shuffle_reads_SOURCES) $(sim_reads_SOURCES) \
	$(sim_reads_tran_SOURCES) $(sort_psl_SOURCES) \
	$(sort_reads_SOURCES) $(split_fa_SOURCES) $(split_fq_SOURCES) \
	$(split_scaffold_SOURCES) $(test_SOURCES) \
	$(validate_component_SOURCES) $(validate_contigs_blat_SOURCES) \
	$(validate_contigs_mummer_SOURCES) \
	$(validate_reads_blat_SOURCES) $(validate_rna_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = $(top_srcdir)/lib/libassembly.a
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_LDFLAGS = -fopenmp
AM_CXXFLAGS = -Wall -O3 -fopenmp
INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/gtest_src 
sort_reads_SOURCES = $(top_srcdir)/src/tools/sort_reads.cpp
parallel_rna_blat_SOURCES = $(top_srcdir)/src/tools/parallel_rna_blat.cpp
test_SOURCES = $(top_srcdir)/src/tools/test.cpp
print_graph_SOURCES = $(top_srcdir)/src/tools/print_graph.cpp
validate_rna_SOURCES = $(top_srcdir)/src/tools/validate_rna.cpp
scaffold_SOURCES = $(top_srcdir)/src/tools/scaffold.cpp
shuffle_reads_SOURCES = $(top_srcdir)/src/tools/shuffle_reads.cpp
fa2fq_SOURCES = $(top_srcdir)/src/tools/fa2fq.cpp
validate_contigs_mummer_SOURCES = $(top_srcdir)/src/tools/validate_contigs_mummer.cpp
filter_blat_SOURCES = $(top_srcdir)/src/tools/filter_blat.cpp
sort_psl_SOURCES = $(top_srcdir)/src/tools/sort_psl.cpp
validate_reads_blat_SOURCES = $(top_srcdir)/src/tools/validate_reads_blat.cpp
validate_component_SOURCES = $(top_srcdir)/src/tools/validate_component.cpp
filter_contigs_SOURCES = $(top_srcdir)/src/tools/filter_contigs.cpp
sample_reads_SOURCES = $(top_srcdir)/src/tools/sample_reads.cpp
split_fq_SOURCES = $(top_srcdir)/src/tools/split_fq.cpp
idba_tran_test_SOURCES = $(top_srcdir)/src/tools/idba_tran_test.cpp
split_fa_SOURCES = $(top_srcdir)/src/tools/split_fa.cpp 
idba_hybrid_SOURCES = $(top_srcdir)/src/release/idba_hybrid.cpp
fq2fa_SOURCES = $(top_srcdir)/src/release/fq2fa.cpp
raw_n50_SOURCES = $(top_srcdir)/src/release/raw_n50.cpp
parallel_blat_SOURCES = $(top_srcdir)/src/release/parallel_blat.cpp
split_scaffold_SOURCES = $(top_srcdir)/src/release/split_scaffold.cpp
validate_contigs_blat_SOURCES = $(top_srcdir)/src/release/validate_contigs_blat.cpp
filterfa_SOURCES = $(top_srcdir)/src/release/filterfa.cpp
sim_reads_SOURCES = $(top_srcdir)/src/release/sim_reads.cpp
idba_ud_SOURCES = $(top_srcdir)/src/release/idba_ud.cpp
sim_reads_tran_SOURCES = $(top_srcdir)/src/release/sim_reads_tran.cpp
idba_tran_SOURCES = $(top_srcdir)/src/release/idba_tran.cpp
idba_SOURCES = $(top_srcdir)/src/release/idba.cpp 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  bin/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  bin/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
fa2fq$(EXEEXT): $(fa2fq_OBJECTS) $(fa2fq_DEPENDENCIES) 
	@rm -f fa2fq$(EXEEXT)
	$(CXXLINK) $(fa2fq_OBJECTS) $(fa2fq_LDADD) $(LIBS)
filter_blat$(EXEEXT): $(filter_blat_OBJECTS) $(filter_blat_DEPENDENCIES) 
	@rm -f filter_blat$(EXEEXT)
	$(CXXLINK) $(filter_blat_OBJECTS) $(filter_blat_LDADD) $(LIBS)
filter_contigs$(EXEEXT): $(filter_contigs_OBJECTS) $(filter_contigs_DEPENDENCIES) 
	@rm -f filter_contigs$(EXEEXT)
	$(CXXLINK) $(filter_contigs_OBJECTS) $(filter_contigs_LDADD) $(LIBS)
filterfa$(EXEEXT): $(filterfa_OBJECTS) $(filterfa_DEPENDENCIES) 
	@rm -f filterfa$(EXEEXT)
	$(CXXLINK) $(filterfa_OBJECTS) $(filterfa_LDADD) $(LIBS)
fq2fa$(EXEEXT): $(fq2fa_OBJECTS) $(fq2fa_DEPENDENCIES) 
	@rm -f fq2fa$(EXEEXT)
	$(CXXLINK) $(fq2fa_OBJECTS) $(fq2fa_LDADD) $(LIBS)
idba$(EXEEXT): $(idba_OBJECTS) $(idba_DEPENDENCIES) 
	@rm -f idba$(EXEEXT)
	$(CXXLINK) $(idba_OBJECTS) $(idba_LDADD) $(LIBS)
idba_hybrid$(EXEEXT): $(idba_hybrid_OBJECTS) $(idba_hybrid_DEPENDENCIES) 
	@rm -f idba_hybrid$(EXEEXT)
	$(CXXLINK) $(idba_hybrid_OBJECTS) $(idba_hybrid_LDADD) $(LIBS)
idba_tran$(EXEEXT): $(idba_tran_OBJECTS) $(idba_tran_DEPENDENCIES) 
	@rm -f idba_tran$(EXEEXT)
	$(CXXLINK) $(idba_tran_OBJECTS) $(idba_tran_LDADD) $(LIBS)
idba_tran_test$(EXEEXT): $(idba_tran_test_OBJECTS) $(idba_tran_test_DEPENDENCIES) 
	@rm -f idba_tran_test$(EXEEXT)
	$(CXXLINK) $(idba_tran_test_OBJECTS) $(idba_tran_test_LDADD) $(LIBS)
idba_ud$(EXEEXT): $(idba_ud_OBJECTS) $(idba_ud_DEPENDENCIES) 
	@rm -f idba_ud$(EXEEXT)
	$(CXXLINK) $(idba_ud_OBJECTS) $(idba_ud_LDADD) $(LIBS)
parallel_blat$(EXEEXT): $(parallel_blat_OBJECTS) $(parallel_blat_DEPENDENCIES) 
	@rm -f parallel_blat$(EXEEXT)
	$(CXXLINK) $(parallel_blat_OBJECTS) $(parallel_blat_LDADD) $(LIBS)
parallel_rna_blat$(EXEEXT): $(parallel_rna_blat_OBJECTS) $(parallel_rna_blat_DEPENDENCIES) 
	@rm -f parallel_rna_blat$(EXEEXT)
	$(CXXLINK) $(parallel_rna_blat_OBJECTS) $(parallel_rna_blat_LDADD) $(LIBS)
print_graph$(EXEEXT): $(print_graph_OBJECTS) $(print_graph_DEPENDENCIES) 
	@rm -f print_graph$(EXEEXT)
	$(CXXLINK) $(print_graph_OBJECTS) $(print_graph_LDADD) $(LIBS)
raw_n50$(EXEEXT): $(raw_n50_OBJECTS) $(raw_n50_DEPENDENCIES) 
	@rm -f raw_n50$(EXEEXT)
	$(CXXLINK) $(raw_n50_OBJECTS) $(raw_n50_LDADD) $(LIBS)
sample_reads$(EXEEXT): $(sample_reads_OBJECTS) $(sample_reads_DEPENDENCIES) 
	@rm -f sample_reads$(EXEEXT)
	$(CXXLINK) $(sample_reads_OBJECTS) $(sample_reads_LDADD) $(LIBS)
scaffold$(EXEEXT): $(scaffold_OBJECTS) $(scaffold_DEPENDENCIES) 
	@rm -f scaffold$(EXEEXT)
	$(CXXLINK) $(scaffold_OBJECTS) $(scaffold_LDADD) $(LIBS)
shuffle_reads$(EXEEXT): $(shuffle_reads_OBJECTS) $(shuffle_reads_DEPENDENCIES) 
	@rm -f shuffle_reads$(EXEEXT)
	$(CXXLINK) $(shuffle_reads_OBJECTS) $(shuffle_reads_LDADD) $(LIBS)
sim_reads$(EXEEXT): $(sim_reads_OBJECTS) $(sim_reads_DEPENDENCIES) 
	@rm -f sim_reads$(EXEEXT)
	$(CXXLINK) $(sim_reads_OBJECTS) $(sim_reads_LDADD) $(LIBS)
sim_reads_tran$(EXEEXT): $(sim_reads_tran_OBJECTS) $(sim_reads_tran_DEPENDENCIES) 
	@rm -f sim_reads_tran$(EXEEXT)
	$(CXXLINK) $(sim_reads_tran_OBJECTS) $(sim_reads_tran_LDADD) $(LIBS)
sort_psl$(EXEEXT): $(sort_psl_OBJECTS) $(sort_psl_DEPENDENCIES) 
	@rm -f sort_psl$(EXEEXT)
	$(CXXLINK) $(sort_psl_OBJECTS) $(sort_psl_LDADD) $(LIBS)
sort_reads$(EXEEXT): $(sort_reads_OBJECTS) $(sort_reads_DEPENDENCIES) 
	@rm -f sort_reads$(EXEEXT)
	$(CXXLINK) $(sort_reads_OBJECTS) $(sort_reads_LDADD) $(LIBS)
split_fa$(EXEEXT): $(split_fa_OBJECTS) $(split_fa_DEPENDENCIES) 
	@rm -f split_fa$(EXEEXT)
	$(CXXLINK) $(split_fa_OBJECTS) $(split_fa_LDADD) $(LIBS)
split_fq$(EXEEXT): $(split_fq_OBJECTS) $(split_fq_DEPENDENCIES) 
	@rm -f split_fq$(EXEEXT)
	$(CXXLINK) $(split_fq_OBJECTS) $(split_fq_LDADD) $(LIBS)
split_scaffold$(EXEEXT): $(split_scaffold_OBJECTS) $(split_scaffold_DEPENDENCIES) 
	@rm -f split_scaffold$(EXEEXT)
	$(CXXLINK) $(split_scaffold_OBJECTS) $(split_scaffold_LDADD) $(LIBS)
test$(EXEEXT): $(test_OBJECTS) $(test_DEPENDENCIES) 
	@rm -f test$(EXEEXT)
	$(CXXLINK) $(test_OBJECTS) $(test_LDADD) $(LIBS)
validate_component$(EXEEXT): $(validate_component_OBJECTS) $(validate_component_DEPENDENCIES) 
	@rm -f validate_component$(EXEEXT)
	$(CXXLINK) $(validate_component_OBJECTS) $(validate_component_LDADD) $(LIBS)
validate_contigs_blat$(EXEEXT): $(validate_contigs_blat_OBJECTS) $(validate_contigs_blat_DEPENDENCIES) 
	@rm -f validate_contigs_blat$(EXEEXT)
	$(CXXLINK) $(validate_contigs_blat_OBJECTS) $(validate_contigs_blat_LDADD) $(LIBS)
validate_contigs_mummer$(EXEEXT): $(validate_contigs_mummer_OBJECTS) $(validate_contigs_mummer_DEPENDENCIES) 
	@rm -f validate_contigs_mummer$(EXEEXT)
	$(CXXLINK) $(validate_contigs_mummer_OBJECTS) $(validate_contigs_mummer_LDADD) $(LIBS)
validate_reads_blat$(EXEEXT): $(validate_reads_blat_OBJECTS) $(validate_reads_blat_DEPENDENCIES) 
	@rm -f validate_reads_blat$(EXEEXT)
	$(CXXLINK) $(validate_reads_blat_OBJECTS) $(validate_reads_blat_LDADD) $(LIBS)
validate_rna$(EXEEXT): $(validate_rna_OBJECTS) $(validate_rna_DEPENDENCIES) 
	@rm -f validate_rna$(EXEEXT)
	$(CXXLINK) $(validate_rna_OBJECTS) $(validate_rna_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fa2fq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_blat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_contigs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filterfa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fq2fa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idba.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idba_hybrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idba_tran.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idba_tran_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idba_ud.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parallel_blat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parallel_rna_blat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/print_graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/raw_n50.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sample_reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scaffold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shuffle_reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_reads_tran.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sort_psl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sort_reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split_fa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split_fq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split_scaffold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validate_component.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validate_contigs_blat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validate_contigs_mummer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validate_reads_blat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validate_rna.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

fa2fq.o: $(top_srcdir)/src/tools/fa2fq.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fa2fq.o -MD -MP -MF $(DEPDIR)/fa2fq.Tpo -c -o fa2fq.o `test -f '$(top_srcdir)/src/tools/fa2fq.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/fa2fq.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fa2fq.Tpo $(DEPDIR)/fa2fq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/fa2fq.cpp' object='fa2fq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fa2fq.o `test -f '$(top_srcdir)/src/tools/fa2fq.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/fa2fq.cpp

fa2fq.obj: $(top_srcdir)/src/tools/fa2fq.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fa2fq.obj -MD -MP -MF $(DEPDIR)/fa2fq.Tpo -c -o fa2fq.obj `if test -f '$(top_srcdir)/src/tools/fa2fq.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/fa2fq.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/fa2fq.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fa2fq.Tpo $(DEPDIR)/fa2fq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/fa2fq.cpp' object='fa2fq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fa2fq.obj `if test -f '$(top_srcdir)/src/tools/fa2fq.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/fa2fq.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/fa2fq.cpp'; fi`

filter_blat.o: $(top_srcdir)/src/tools/filter_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_blat.o -MD -MP -MF $(DEPDIR)/filter_blat.Tpo -c -o filter_blat.o `test -f '$(top_srcdir)/src/tools/filter_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/filter_blat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filter_blat.Tpo $(DEPDIR)/filter_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/filter_blat.cpp' object='filter_blat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_blat.o `test -f '$(top_srcdir)/src/tools/filter_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/filter_blat.cpp

filter_blat.obj: $(top_srcdir)/src/tools/filter_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_blat.obj -MD -MP -MF $(DEPDIR)/filter_blat.Tpo -c -o filter_blat.obj `if test -f '$(top_srcdir)/src/tools/filter_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/filter_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/filter_blat.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filter_blat.Tpo $(DEPDIR)/filter_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/filter_blat.cpp' object='filter_blat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_blat.obj `if test -f '$(top_srcdir)/src/tools/filter_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/filter_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/filter_blat.cpp'; fi`

filter_contigs.o: $(top_srcdir)/src/tools/filter_contigs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_contigs.o -MD -MP -MF $(DEPDIR)/filter_contigs.Tpo -c -o filter_contigs.o `test -f '$(top_srcdir)/src/tools/filter_contigs.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/filter_contigs.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filter_contigs.Tpo $(DEPDIR)/filter_contigs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/filter_contigs.cpp' object='filter_contigs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_contigs.o `test -f '$(top_srcdir)/src/tools/filter_contigs.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/filter_contigs.cpp

filter_contigs.obj: $(top_srcdir)/src/tools/filter_contigs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_contigs.obj -MD -MP -MF $(DEPDIR)/filter_contigs.Tpo -c -o filter_contigs.obj `if test -f '$(top_srcdir)/src/tools/filter_contigs.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/filter_contigs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/filter_contigs.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filter_contigs.Tpo $(DEPDIR)/filter_contigs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/filter_contigs.cpp' object='filter_contigs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_contigs.obj `if test -f '$(top_srcdir)/src/tools/filter_contigs.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/filter_contigs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/filter_contigs.cpp'; fi`

filterfa.o: $(top_srcdir)/src/release/filterfa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filterfa.o -MD -MP -MF $(DEPDIR)/filterfa.Tpo -c -o filterfa.o `test -f '$(top_srcdir)/src/release/filterfa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/filterfa.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filterfa.Tpo $(DEPDIR)/filterfa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/filterfa.cpp' object='filterfa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filterfa.o `test -f '$(top_srcdir)/src/release/filterfa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/filterfa.cpp

filterfa.obj: $(top_srcdir)/src/release/filterfa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filterfa.obj -MD -MP -MF $(DEPDIR)/filterfa.Tpo -c -o filterfa.obj `if test -f '$(top_srcdir)/src/release/filterfa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/filterfa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/filterfa.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/filterfa.Tpo $(DEPDIR)/filterfa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/filterfa.cpp' object='filterfa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filterfa.obj `if test -f '$(top_srcdir)/src/release/filterfa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/filterfa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/filterfa.cpp'; fi`

fq2fa.o: $(top_srcdir)/src/release/fq2fa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fq2fa.o -MD -MP -MF $(DEPDIR)/fq2fa.Tpo -c -o fq2fa.o `test -f '$(top_srcdir)/src/release/fq2fa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/fq2fa.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fq2fa.Tpo $(DEPDIR)/fq2fa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/fq2fa.cpp' object='fq2fa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fq2fa.o `test -f '$(top_srcdir)/src/release/fq2fa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/fq2fa.cpp

fq2fa.obj: $(top_srcdir)/src/release/fq2fa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fq2fa.obj -MD -MP -MF $(DEPDIR)/fq2fa.Tpo -c -o fq2fa.obj `if test -f '$(top_srcdir)/src/release/fq2fa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/fq2fa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/fq2fa.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fq2fa.Tpo $(DEPDIR)/fq2fa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/fq2fa.cpp' object='fq2fa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fq2fa.obj `if test -f '$(top_srcdir)/src/release/fq2fa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/fq2fa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/fq2fa.cpp'; fi`

idba.o: $(top_srcdir)/src/release/idba.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba.o -MD -MP -MF $(DEPDIR)/idba.Tpo -c -o idba.o `test -f '$(top_srcdir)/src/release/idba.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba.Tpo $(DEPDIR)/idba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba.cpp' object='idba.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba.o `test -f '$(top_srcdir)/src/release/idba.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba.cpp

idba.obj: $(top_srcdir)/src/release/idba.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba.obj -MD -MP -MF $(DEPDIR)/idba.Tpo -c -o idba.obj `if test -f '$(top_srcdir)/src/release/idba.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba.Tpo $(DEPDIR)/idba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba.cpp' object='idba.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba.obj `if test -f '$(top_srcdir)/src/release/idba.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba.cpp'; fi`

idba_hybrid.o: $(top_srcdir)/src/release/idba_hybrid.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_hybrid.o -MD -MP -MF $(DEPDIR)/idba_hybrid.Tpo -c -o idba_hybrid.o `test -f '$(top_srcdir)/src/release/idba_hybrid.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_hybrid.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_hybrid.Tpo $(DEPDIR)/idba_hybrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_hybrid.cpp' object='idba_hybrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_hybrid.o `test -f '$(top_srcdir)/src/release/idba_hybrid.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_hybrid.cpp

idba_hybrid.obj: $(top_srcdir)/src/release/idba_hybrid.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_hybrid.obj -MD -MP -MF $(DEPDIR)/idba_hybrid.Tpo -c -o idba_hybrid.obj `if test -f '$(top_srcdir)/src/release/idba_hybrid.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_hybrid.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_hybrid.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_hybrid.Tpo $(DEPDIR)/idba_hybrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_hybrid.cpp' object='idba_hybrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_hybrid.obj `if test -f '$(top_srcdir)/src/release/idba_hybrid.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_hybrid.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_hybrid.cpp'; fi`

idba_tran.o: $(top_srcdir)/src/release/idba_tran.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_tran.o -MD -MP -MF $(DEPDIR)/idba_tran.Tpo -c -o idba_tran.o `test -f '$(top_srcdir)/src/release/idba_tran.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_tran.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_tran.Tpo $(DEPDIR)/idba_tran.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_tran.cpp' object='idba_tran.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_tran.o `test -f '$(top_srcdir)/src/release/idba_tran.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_tran.cpp

idba_tran.obj: $(top_srcdir)/src/release/idba_tran.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_tran.obj -MD -MP -MF $(DEPDIR)/idba_tran.Tpo -c -o idba_tran.obj `if test -f '$(top_srcdir)/src/release/idba_tran.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_tran.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_tran.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_tran.Tpo $(DEPDIR)/idba_tran.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_tran.cpp' object='idba_tran.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_tran.obj `if test -f '$(top_srcdir)/src/release/idba_tran.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_tran.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_tran.cpp'; fi`

idba_tran_test.o: $(top_srcdir)/src/tools/idba_tran_test.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_tran_test.o -MD -MP -MF $(DEPDIR)/idba_tran_test.Tpo -c -o idba_tran_test.o `test -f '$(top_srcdir)/src/tools/idba_tran_test.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/idba_tran_test.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_tran_test.Tpo $(DEPDIR)/idba_tran_test.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/idba_tran_test.cpp' object='idba_tran_test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_tran_test.o `test -f '$(top_srcdir)/src/tools/idba_tran_test.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/idba_tran_test.cpp

idba_tran_test.obj: $(top_srcdir)/src/tools/idba_tran_test.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_tran_test.obj -MD -MP -MF $(DEPDIR)/idba_tran_test.Tpo -c -o idba_tran_test.obj `if test -f '$(top_srcdir)/src/tools/idba_tran_test.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/idba_tran_test.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/idba_tran_test.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_tran_test.Tpo $(DEPDIR)/idba_tran_test.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/idba_tran_test.cpp' object='idba_tran_test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_tran_test.obj `if test -f '$(top_srcdir)/src/tools/idba_tran_test.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/idba_tran_test.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/idba_tran_test.cpp'; fi`

idba_ud.o: $(top_srcdir)/src/release/idba_ud.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_ud.o -MD -MP -MF $(DEPDIR)/idba_ud.Tpo -c -o idba_ud.o `test -f '$(top_srcdir)/src/release/idba_ud.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_ud.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_ud.Tpo $(DEPDIR)/idba_ud.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_ud.cpp' object='idba_ud.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_ud.o `test -f '$(top_srcdir)/src/release/idba_ud.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/idba_ud.cpp

idba_ud.obj: $(top_srcdir)/src/release/idba_ud.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT idba_ud.obj -MD -MP -MF $(DEPDIR)/idba_ud.Tpo -c -o idba_ud.obj `if test -f '$(top_srcdir)/src/release/idba_ud.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_ud.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_ud.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/idba_ud.Tpo $(DEPDIR)/idba_ud.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/idba_ud.cpp' object='idba_ud.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o idba_ud.obj `if test -f '$(top_srcdir)/src/release/idba_ud.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/idba_ud.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/idba_ud.cpp'; fi`

parallel_blat.o: $(top_srcdir)/src/release/parallel_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parallel_blat.o -MD -MP -MF $(DEPDIR)/parallel_blat.Tpo -c -o parallel_blat.o `test -f '$(top_srcdir)/src/release/parallel_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/parallel_blat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/parallel_blat.Tpo $(DEPDIR)/parallel_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/parallel_blat.cpp' object='parallel_blat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parallel_blat.o `test -f '$(top_srcdir)/src/release/parallel_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/parallel_blat.cpp

parallel_blat.obj: $(top_srcdir)/src/release/parallel_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parallel_blat.obj -MD -MP -MF $(DEPDIR)/parallel_blat.Tpo -c -o parallel_blat.obj `if test -f '$(top_srcdir)/src/release/parallel_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/parallel_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/parallel_blat.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/parallel_blat.Tpo $(DEPDIR)/parallel_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/parallel_blat.cpp' object='parallel_blat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parallel_blat.obj `if test -f '$(top_srcdir)/src/release/parallel_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/parallel_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/parallel_blat.cpp'; fi`

parallel_rna_blat.o: $(top_srcdir)/src/tools/parallel_rna_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parallel_rna_blat.o -MD -MP -MF $(DEPDIR)/parallel_rna_blat.Tpo -c -o parallel_rna_blat.o `test -f '$(top_srcdir)/src/tools/parallel_rna_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/parallel_rna_blat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/parallel_rna_blat.Tpo $(DEPDIR)/parallel_rna_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/parallel_rna_blat.cpp' object='parallel_rna_blat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parallel_rna_blat.o `test -f '$(top_srcdir)/src/tools/parallel_rna_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/parallel_rna_blat.cpp

parallel_rna_blat.obj: $(top_srcdir)/src/tools/parallel_rna_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parallel_rna_blat.obj -MD -MP -MF $(DEPDIR)/parallel_rna_blat.Tpo -c -o parallel_rna_blat.obj `if test -f '$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/parallel_rna_blat.Tpo $(DEPDIR)/parallel_rna_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/parallel_rna_blat.cpp' object='parallel_rna_blat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parallel_rna_blat.obj `if test -f '$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/parallel_rna_blat.cpp'; fi`

print_graph.o: $(top_srcdir)/src/tools/print_graph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print_graph.o -MD -MP -MF $(DEPDIR)/print_graph.Tpo -c -o print_graph.o `test -f '$(top_srcdir)/src/tools/print_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/print_graph.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/print_graph.Tpo $(DEPDIR)/print_graph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/print_graph.cpp' object='print_graph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print_graph.o `test -f '$(top_srcdir)/src/tools/print_graph.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/print_graph.cpp

print_graph.obj: $(top_srcdir)/src/tools/print_graph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print_graph.obj -MD -MP -MF $(DEPDIR)/print_graph.Tpo -c -o print_graph.obj `if test -f '$(top_srcdir)/src/tools/print_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/print_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/print_graph.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/print_graph.Tpo $(DEPDIR)/print_graph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/print_graph.cpp' object='print_graph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print_graph.obj `if test -f '$(top_srcdir)/src/tools/print_graph.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/print_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/print_graph.cpp'; fi`

raw_n50.o: $(top_srcdir)/src/release/raw_n50.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT raw_n50.o -MD -MP -MF $(DEPDIR)/raw_n50.Tpo -c -o raw_n50.o `test -f '$(top_srcdir)/src/release/raw_n50.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/raw_n50.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/raw_n50.Tpo $(DEPDIR)/raw_n50.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/raw_n50.cpp' object='raw_n50.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o raw_n50.o `test -f '$(top_srcdir)/src/release/raw_n50.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/raw_n50.cpp

raw_n50.obj: $(top_srcdir)/src/release/raw_n50.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT raw_n50.obj -MD -MP -MF $(DEPDIR)/raw_n50.Tpo -c -o raw_n50.obj `if test -f '$(top_srcdir)/src/release/raw_n50.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/raw_n50.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/raw_n50.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/raw_n50.Tpo $(DEPDIR)/raw_n50.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/raw_n50.cpp' object='raw_n50.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o raw_n50.obj `if test -f '$(top_srcdir)/src/release/raw_n50.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/raw_n50.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/raw_n50.cpp'; fi`

sample_reads.o: $(top_srcdir)/src/tools/sample_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sample_reads.o -MD -MP -MF $(DEPDIR)/sample_reads.Tpo -c -o sample_reads.o `test -f '$(top_srcdir)/src/tools/sample_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sample_reads.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sample_reads.Tpo $(DEPDIR)/sample_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sample_reads.cpp' object='sample_reads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sample_reads.o `test -f '$(top_srcdir)/src/tools/sample_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sample_reads.cpp

sample_reads.obj: $(top_srcdir)/src/tools/sample_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sample_reads.obj -MD -MP -MF $(DEPDIR)/sample_reads.Tpo -c -o sample_reads.obj `if test -f '$(top_srcdir)/src/tools/sample_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sample_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sample_reads.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sample_reads.Tpo $(DEPDIR)/sample_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sample_reads.cpp' object='sample_reads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sample_reads.obj `if test -f '$(top_srcdir)/src/tools/sample_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sample_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sample_reads.cpp'; fi`

scaffold.o: $(top_srcdir)/src/tools/scaffold.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaffold.o -MD -MP -MF $(DEPDIR)/scaffold.Tpo -c -o scaffold.o `test -f '$(top_srcdir)/src/tools/scaffold.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/scaffold.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/scaffold.Tpo $(DEPDIR)/scaffold.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/scaffold.cpp' object='scaffold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaffold.o `test -f '$(top_srcdir)/src/tools/scaffold.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/scaffold.cpp

scaffold.obj: $(top_srcdir)/src/tools/scaffold.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scaffold.obj -MD -MP -MF $(DEPDIR)/scaffold.Tpo -c -o scaffold.obj `if test -f '$(top_srcdir)/src/tools/scaffold.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/scaffold.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/scaffold.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/scaffold.Tpo $(DEPDIR)/scaffold.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/scaffold.cpp' object='scaffold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scaffold.obj `if test -f '$(top_srcdir)/src/tools/scaffold.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/scaffold.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/scaffold.cpp'; fi`

shuffle_reads.o: $(top_srcdir)/src/tools/shuffle_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shuffle_reads.o -MD -MP -MF $(DEPDIR)/shuffle_reads.Tpo -c -o shuffle_reads.o `test -f '$(top_srcdir)/src/tools/shuffle_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/shuffle_reads.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/shuffle_reads.Tpo $(DEPDIR)/shuffle_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/shuffle_reads.cpp' object='shuffle_reads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shuffle_reads.o `test -f '$(top_srcdir)/src/tools/shuffle_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/shuffle_reads.cpp

shuffle_reads.obj: $(top_srcdir)/src/tools/shuffle_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shuffle_reads.obj -MD -MP -MF $(DEPDIR)/shuffle_reads.Tpo -c -o shuffle_reads.obj `if test -f '$(top_srcdir)/src/tools/shuffle_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/shuffle_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/shuffle_reads.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/shuffle_reads.Tpo $(DEPDIR)/shuffle_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/shuffle_reads.cpp' object='shuffle_reads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shuffle_reads.obj `if test -f '$(top_srcdir)/src/tools/shuffle_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/shuffle_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/shuffle_reads.cpp'; fi`

sim_reads.o: $(top_srcdir)/src/release/sim_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sim_reads.o -MD -MP -MF $(DEPDIR)/sim_reads.Tpo -c -o sim_reads.o `test -f '$(top_srcdir)/src/release/sim_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/sim_reads.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sim_reads.Tpo $(DEPDIR)/sim_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/sim_reads.cpp' object='sim_reads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sim_reads.o `test -f '$(top_srcdir)/src/release/sim_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/sim_reads.cpp

sim_reads.obj: $(top_srcdir)/src/release/sim_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sim_reads.obj -MD -MP -MF $(DEPDIR)/sim_reads.Tpo -c -o sim_reads.obj `if test -f '$(top_srcdir)/src/release/sim_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/sim_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/sim_reads.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sim_reads.Tpo $(DEPDIR)/sim_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/sim_reads.cpp' object='sim_reads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sim_reads.obj `if test -f '$(top_srcdir)/src/release/sim_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/sim_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/sim_reads.cpp'; fi`

sim_reads_tran.o: $(top_srcdir)/src/release/sim_reads_tran.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sim_reads_tran.o -MD -MP -MF $(DEPDIR)/sim_reads_tran.Tpo -c -o sim_reads_tran.o `test -f '$(top_srcdir)/src/release/sim_reads_tran.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/sim_reads_tran.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sim_reads_tran.Tpo $(DEPDIR)/sim_reads_tran.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/sim_reads_tran.cpp' object='sim_reads_tran.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sim_reads_tran.o `test -f '$(top_srcdir)/src/release/sim_reads_tran.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/sim_reads_tran.cpp

sim_reads_tran.obj: $(top_srcdir)/src/release/sim_reads_tran.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sim_reads_tran.obj -MD -MP -MF $(DEPDIR)/sim_reads_tran.Tpo -c -o sim_reads_tran.obj `if test -f '$(top_srcdir)/src/release/sim_reads_tran.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/sim_reads_tran.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/sim_reads_tran.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sim_reads_tran.Tpo $(DEPDIR)/sim_reads_tran.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/sim_reads_tran.cpp' object='sim_reads_tran.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sim_reads_tran.obj `if test -f '$(top_srcdir)/src/release/sim_reads_tran.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/sim_reads_tran.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/sim_reads_tran.cpp'; fi`

sort_psl.o: $(top_srcdir)/src/tools/sort_psl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_psl.o -MD -MP -MF $(DEPDIR)/sort_psl.Tpo -c -o sort_psl.o `test -f '$(top_srcdir)/src/tools/sort_psl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sort_psl.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sort_psl.Tpo $(DEPDIR)/sort_psl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sort_psl.cpp' object='sort_psl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_psl.o `test -f '$(top_srcdir)/src/tools/sort_psl.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sort_psl.cpp

sort_psl.obj: $(top_srcdir)/src/tools/sort_psl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_psl.obj -MD -MP -MF $(DEPDIR)/sort_psl.Tpo -c -o sort_psl.obj `if test -f '$(top_srcdir)/src/tools/sort_psl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sort_psl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sort_psl.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sort_psl.Tpo $(DEPDIR)/sort_psl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sort_psl.cpp' object='sort_psl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_psl.obj `if test -f '$(top_srcdir)/src/tools/sort_psl.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sort_psl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sort_psl.cpp'; fi`

sort_reads.o: $(top_srcdir)/src/tools/sort_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_reads.o -MD -MP -MF $(DEPDIR)/sort_reads.Tpo -c -o sort_reads.o `test -f '$(top_srcdir)/src/tools/sort_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sort_reads.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sort_reads.Tpo $(DEPDIR)/sort_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sort_reads.cpp' object='sort_reads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_reads.o `test -f '$(top_srcdir)/src/tools/sort_reads.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/sort_reads.cpp

sort_reads.obj: $(top_srcdir)/src/tools/sort_reads.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_reads.obj -MD -MP -MF $(DEPDIR)/sort_reads.Tpo -c -o sort_reads.obj `if test -f '$(top_srcdir)/src/tools/sort_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sort_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sort_reads.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sort_reads.Tpo $(DEPDIR)/sort_reads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/sort_reads.cpp' object='sort_reads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_reads.obj `if test -f '$(top_srcdir)/src/tools/sort_reads.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/sort_reads.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/sort_reads.cpp'; fi`

split_fa.o: $(top_srcdir)/src/tools/split_fa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_fa.o -MD -MP -MF $(DEPDIR)/split_fa.Tpo -c -o split_fa.o `test -f '$(top_srcdir)/src/tools/split_fa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/split_fa.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_fa.Tpo $(DEPDIR)/split_fa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/split_fa.cpp' object='split_fa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_fa.o `test -f '$(top_srcdir)/src/tools/split_fa.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/split_fa.cpp

split_fa.obj: $(top_srcdir)/src/tools/split_fa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_fa.obj -MD -MP -MF $(DEPDIR)/split_fa.Tpo -c -o split_fa.obj `if test -f '$(top_srcdir)/src/tools/split_fa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/split_fa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/split_fa.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_fa.Tpo $(DEPDIR)/split_fa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/split_fa.cpp' object='split_fa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_fa.obj `if test -f '$(top_srcdir)/src/tools/split_fa.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/split_fa.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/split_fa.cpp'; fi`

split_fq.o: $(top_srcdir)/src/tools/split_fq.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_fq.o -MD -MP -MF $(DEPDIR)/split_fq.Tpo -c -o split_fq.o `test -f '$(top_srcdir)/src/tools/split_fq.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/split_fq.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_fq.Tpo $(DEPDIR)/split_fq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/split_fq.cpp' object='split_fq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_fq.o `test -f '$(top_srcdir)/src/tools/split_fq.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/split_fq.cpp

split_fq.obj: $(top_srcdir)/src/tools/split_fq.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_fq.obj -MD -MP -MF $(DEPDIR)/split_fq.Tpo -c -o split_fq.obj `if test -f '$(top_srcdir)/src/tools/split_fq.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/split_fq.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/split_fq.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_fq.Tpo $(DEPDIR)/split_fq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/split_fq.cpp' object='split_fq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_fq.obj `if test -f '$(top_srcdir)/src/tools/split_fq.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/split_fq.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/split_fq.cpp'; fi`

split_scaffold.o: $(top_srcdir)/src/release/split_scaffold.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_scaffold.o -MD -MP -MF $(DEPDIR)/split_scaffold.Tpo -c -o split_scaffold.o `test -f '$(top_srcdir)/src/release/split_scaffold.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/split_scaffold.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_scaffold.Tpo $(DEPDIR)/split_scaffold.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/split_scaffold.cpp' object='split_scaffold.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_scaffold.o `test -f '$(top_srcdir)/src/release/split_scaffold.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/split_scaffold.cpp

split_scaffold.obj: $(top_srcdir)/src/release/split_scaffold.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT split_scaffold.obj -MD -MP -MF $(DEPDIR)/split_scaffold.Tpo -c -o split_scaffold.obj `if test -f '$(top_srcdir)/src/release/split_scaffold.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/split_scaffold.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/split_scaffold.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/split_scaffold.Tpo $(DEPDIR)/split_scaffold.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/split_scaffold.cpp' object='split_scaffold.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o split_scaffold.obj `if test -f '$(top_srcdir)/src/release/split_scaffold.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/split_scaffold.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/split_scaffold.cpp'; fi`

test.o: $(top_srcdir)/src/tools/test.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test.o -MD -MP -MF $(DEPDIR)/test.Tpo -c -o test.o `test -f '$(top_srcdir)/src/tools/test.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/test.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test.Tpo $(DEPDIR)/test.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/test.cpp' object='test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test.o `test -f '$(top_srcdir)/src/tools/test.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/test.cpp

test.obj: $(top_srcdir)/src/tools/test.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test.obj -MD -MP -MF $(DEPDIR)/test.Tpo -c -o test.obj `if test -f '$(top_srcdir)/src/tools/test.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/test.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/test.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/test.Tpo $(DEPDIR)/test.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/test.cpp' object='test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test.obj `if test -f '$(top_srcdir)/src/tools/test.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/test.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/test.cpp'; fi`

validate_component.o: $(top_srcdir)/src/tools/validate_component.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_component.o -MD -MP -MF $(DEPDIR)/validate_component.Tpo -c -o validate_component.o `test -f '$(top_srcdir)/src/tools/validate_component.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_component.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_component.Tpo $(DEPDIR)/validate_component.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_component.cpp' object='validate_component.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_component.o `test -f '$(top_srcdir)/src/tools/validate_component.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_component.cpp

validate_component.obj: $(top_srcdir)/src/tools/validate_component.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_component.obj -MD -MP -MF $(DEPDIR)/validate_component.Tpo -c -o validate_component.obj `if test -f '$(top_srcdir)/src/tools/validate_component.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_component.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_component.Tpo $(DEPDIR)/validate_component.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_component.cpp' object='validate_component.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_component.obj `if test -f '$(top_srcdir)/src/tools/validate_component.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_component.cpp'; fi`

validate_contigs_blat.o: $(top_srcdir)/src/release/validate_contigs_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_contigs_blat.o -MD -MP -MF $(DEPDIR)/validate_contigs_blat.Tpo -c -o validate_contigs_blat.o `test -f '$(top_srcdir)/src/release/validate_contigs_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/validate_contigs_blat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_contigs_blat.Tpo $(DEPDIR)/validate_contigs_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/validate_contigs_blat.cpp' object='validate_contigs_blat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_contigs_blat.o `test -f '$(top_srcdir)/src/release/validate_contigs_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/release/validate_contigs_blat.cpp

validate_contigs_blat.obj: $(top_srcdir)/src/release/validate_contigs_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_contigs_blat.obj -MD -MP -MF $(DEPDIR)/validate_contigs_blat.Tpo -c -o validate_contigs_blat.obj `if test -f '$(top_srcdir)/src/release/validate_contigs_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/validate_contigs_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/validate_contigs_blat.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_contigs_blat.Tpo $(DEPDIR)/validate_contigs_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/release/validate_contigs_blat.cpp' object='validate_contigs_blat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_contigs_blat.obj `if test -f '$(top_srcdir)/src/release/validate_contigs_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/release/validate_contigs_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/release/validate_contigs_blat.cpp'; fi`

validate_contigs_mummer.o: $(top_srcdir)/src/tools/validate_contigs_mummer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_contigs_mummer.o -MD -MP -MF $(DEPDIR)/validate_contigs_mummer.Tpo -c -o validate_contigs_mummer.o `test -f '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_contigs_mummer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_contigs_mummer.Tpo $(DEPDIR)/validate_contigs_mummer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_contigs_mummer.cpp' object='validate_contigs_mummer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_contigs_mummer.o `test -f '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_contigs_mummer.cpp

validate_contigs_mummer.obj: $(top_srcdir)/src/tools/validate_contigs_mummer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_contigs_mummer.obj -MD -MP -MF $(DEPDIR)/validate_contigs_mummer.Tpo -c -o validate_contigs_mummer.obj `if test -f '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_contigs_mummer.Tpo $(DEPDIR)/validate_contigs_mummer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_contigs_mummer.cpp' object='validate_contigs_mummer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_contigs_mummer.obj `if test -f '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_contigs_mummer.cpp'; fi`

validate_reads_blat.o: $(top_srcdir)/src/tools/validate_reads_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_reads_blat.o -MD -MP -MF $(DEPDIR)/validate_reads_blat.Tpo -c -o validate_reads_blat.o `test -f '$(top_srcdir)/src/tools/validate_reads_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_reads_blat.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_reads_blat.Tpo $(DEPDIR)/validate_reads_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_reads_blat.cpp' object='validate_reads_blat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_reads_blat.o `test -f '$(top_srcdir)/src/tools/validate_reads_blat.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_reads_blat.cpp

validate_reads_blat.obj: $(top_srcdir)/src/tools/validate_reads_blat.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_reads_blat.obj -MD -MP -MF $(DEPDIR)/validate_reads_blat.Tpo -c -o validate_reads_blat.obj `if test -f '$(top_srcdir)/src/tools/validate_reads_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_reads_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_reads_blat.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_reads_blat.Tpo $(DEPDIR)/validate_reads_blat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_reads_blat.cpp' object='validate_reads_blat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_reads_blat.obj `if test -f '$(top_srcdir)/src/tools/validate_reads_blat.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_reads_blat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_reads_blat.cpp'; fi`

validate_rna.o: $(top_srcdir)/src/tools/validate_rna.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_rna.o -MD -MP -MF $(DEPDIR)/validate_rna.Tpo -c -o validate_rna.o `test -f '$(top_srcdir)/src/tools/validate_rna.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_rna.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_rna.Tpo $(DEPDIR)/validate_rna.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_rna.cpp' object='validate_rna.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_rna.o `test -f '$(top_srcdir)/src/tools/validate_rna.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/tools/validate_rna.cpp

validate_rna.obj: $(top_srcdir)/src/tools/validate_rna.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT validate_rna.obj -MD -MP -MF $(DEPDIR)/validate_rna.Tpo -c -o validate_rna.obj `if test -f '$(top_srcdir)/src/tools/validate_rna.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_rna.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_rna.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/validate_rna.Tpo $(DEPDIR)/validate_rna.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(top_srcdir)/src/tools/validate_rna.cpp' object='validate_rna.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o validate_rna.obj `if test -f '$(top_srcdir)/src/tools/validate_rna.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/tools/validate_rna.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/tools/validate_rna.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
