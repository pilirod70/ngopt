#summary A brief tutorial describing how to score genome assemblies using the Mauve system

= Introduction =

Most assembly algorithms provide a large variety of parameters that can be adjusted to control the assembly process.  It may be necessary to tune these parameters to fit details of the sequencing strategy and genomes being assembled.  This document will illustrate how one can compare assemblies done by different algorithms or different parameter settings to select an ideal assembly strategy.  We assume that a high quality reference genome is available, and that sequence reads for that reference genome are available, and also that the reference genome is similar enough to the genomes being targeted for assembly that parameters which work well on the reference will also work well on the other genomes.


= Software requirements =

Please obtain a copy of Mauve from here:
http://gel.ahabs.wisc.edu/mauve/snapshots/

Then obtain a copy of the Mauve assembly metrics scripts from here:
http://ngopt.googlecode.com/svn/trunk/assemblathon

Alternatively these can be checked out using subversion:

{{{
svn checkout http://ngopt.googlecode.com/svn/trunk/assemblathon assemblathon-mauve
}}}


= Data requirements = 

  * A reference genome, either in FastA or GenBank format (preferred).  For the tutorial we will use Haloferax_volcanii_DS2.gbk

  * Some genome assemblies.  These can also be in FastA or GenBank formats.  For the tutorial we will use assembly1.fasta, assembly2.fasta, and assembly3.fasta


= Computing Mauve Assembly Metrics =

The following instructions assume you have downloaded and unpacked the Mauve software into a directory called mauve_snapshot_directory and have also downloaded the test data files Haloferax_volcanii_DS2.gbk, assembly1.fasta, assembly2.fasta, and assembly3.fasta into that directory.  If these files exist in different locations it will be necessary to adjust the paths accordingly in the following commands.

  # Use Mauve to score each assembly
{{{
cd mauve_snapshot_directory

java -cp Mauve.jar org.gel.mauve.assembly.ScoreAssembly -reference Haloferax_volcanii_DS2.gbk -assembly assembly1.fasta -reorder assembly1_reorder -outputDir assembly1_scores

java -cp Mauve.jar org.gel.mauve.assembly.ScoreAssembly -reference Haloferax_volcanii_DS2.gbk -assembly assembly2.fasta -reorder assembly2_reorder -outputDir assembly2_scores

java -cp Mauve.jar org.gel.mauve.assembly.ScoreAssembly -reference Haloferax_volcanii_DS2.gbk -assembly assembly3.fasta -reorder assembly3_reorder -outputDir assembly3_scores
}}} 
  # Generate summary plots comparing the assemblies
{{{
# merge the assembly summaries to a single summary.txt
head -n 1 assembly1_scores/summary.txt > summary.txt
tail -n 1 assembly*_scores/summary.txt >> summary.txt

# make plots
assemblathonMauvePlots.R assembly*_scores/alignment
}}}
  # Visualize PDFs of accuracy plots.  A large number of PDFs will be generated in the current directory.  These plots can be used to decide on the assembly strategy that best meets your project's objectives.  For example, you may prefer the assembly with the highest fraction of coding regions reconstructed, or the assembly with the fewest structural errors, or the assembly that captures the true genomic content most precisely.